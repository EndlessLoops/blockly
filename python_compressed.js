// Do not edit this file; automatically generated by build.py.
'use strict';


// Copyright 2012 Google Inc.  Apache License 2.0
Blockly.Python=new Blockly.Generator("Python");Blockly.Python.addReservedWords("and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,not,or,pass,print,raise,return,try,while,with,yield,True,False,None,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,abs,divmod,input,open,staticmethod,all,enumerate,int,ord,str,any,eval,isinstance,pow,sum,basestring,execfile,issubclass,print,super,bin,file,iter,property,tuple,bool,filter,len,range,type,bytearray,float,list,raw_input,unichr,callable,format,locals,reduce,unicode,chr,frozenset,long,reload,vars,classmethod,getattr,map,repr,xrange,cmp,globals,max,reversed,zip,compile,hasattr,memoryview,round,__import__,complex,hash,min,set,apply,delattr,help,next,setattr,buffer,dict,hex,object,slice,coerce,dir,id,oct,sorted,intern");
Blockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2;Blockly.Python.ORDER_FUNCTION_CALL=2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;
Blockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;Blockly.Python.PASS="  pass\n";
Blockly.Python.init=function(a){Blockly.Python.definitions_=Object.create(null);Blockly.Python.functionNames_=Object.create(null);Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_);var b=[];a=Blockly.Variables.allVariables(a);for(var d=0;d<a.length;d++)b[d]=Blockly.Python.variableDB_.getName(a[d],Blockly.Variables.NAME_TYPE)+" = None";Blockly.Python.definitions_.variables=b.join("\n")};
Blockly.Python.finish=function(a){var b=[],d=[],c;for(c in Blockly.Python.definitions_){var e=Blockly.Python.definitions_[c];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?b.push(e):d.push(e)}delete Blockly.Python.definitions_;delete Blockly.Python.functionNames_;Blockly.Python.variableDB_.reset();return(b.join("\n")+"\n\n"+d.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};Blockly.Python.scrubNakedValue=function(a){return a+"\n"};
Blockly.Python.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\%/g,"\\%").replace(/'/g,"\\'");return"'"+a+"'"};
Blockly.Python.scrub_=function(a,b){var d="";if(!a.outputConnection||!a.outputConnection.targetConnection){var c=a.getCommentText();c&&(d+=Blockly.Python.prefixLines(c,"# ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(c=a.inputList[e].connection.targetBlock())&&(c=Blockly.Python.allNestedComments(c))&&(d+=Blockly.Python.prefixLines(c,"# "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=Blockly.Python.blockToCode(e);return d+b+e};/*


 Copyright 2015 Erle Robotics
 http://erlerobotics.com

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.Python.control={};Blockly.Python.wait=function(a){a=a.getFieldValue("WAIT_SECS");a="import time\n"+("time.sleep("+a+")\n");return a+="\n"};Blockly.Python.math={};Blockly.Python.addReservedWords("math,random,Number");Blockly.Python.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));return[a,0>a?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.Python.ORDER_EXPONENTIATION]}[a.getFieldValue("OP")],d=b[0],b=b[1],c=Blockly.Python.valueToCode(a,"A",b)||"0";a=Blockly.Python.valueToCode(a,"B",b)||"0";return[c+d+a,b]};
Blockly.Python.math_single=function(a){var b=a.getFieldValue("OP"),d;if("NEG"==b)return d=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_UNARY_SIGN)||"0",["-"+d,Blockly.Python.ORDER_UNARY_SIGN];Blockly.Python.definitions_.import_math="import math";a="SIN"==b||"COS"==b||"TAN"==b?Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0":Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_NONE)||"0";switch(b){case "ABS":d="math.fabs("+a+")";break;case "ROOT":d="math.sqrt("+
a+")";break;case "LN":d="math.log("+a+")";break;case "LOG10":d="math.log10("+a+")";break;case "EXP":d="math.exp("+a+")";break;case "POW10":d="math.pow(10,"+a+")";break;case "ROUND":d="round("+a+")";break;case "ROUNDUP":d="math.ceil("+a+")";break;case "ROUNDDOWN":d="math.floor("+a+")";break;case "SIN":d="math.sin("+a+" / 180.0 * math.pi)";break;case "COS":d="math.cos("+a+" / 180.0 * math.pi)";break;case "TAN":d="math.tan("+a+" / 180.0 * math.pi)"}if(d)return[d,Blockly.Python.ORDER_FUNCTION_CALL];switch(b){case "ASIN":d=
"math.asin("+a+") / math.pi * 180";break;case "ACOS":d="math.acos("+a+") / math.pi * 180";break;case "ATAN":d="math.atan("+a+") / math.pi * 180";break;default:throw"Unknown math operator: "+b;}return[d,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constant=function(a){var b={PI:["math.pi",Blockly.Python.ORDER_MEMBER],E:["math.e",Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.Python.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",Blockly.Python.ORDER_MEMBER],INFINITY:["float('inf')",Blockly.Python.ORDER_ATOMIC]};a=a.getFieldValue("CONSTANT");"INFINITY"!=a&&(Blockly.Python.definitions_.import_math="import math");return b[a]};
Blockly.Python.math_number_property=function(a){var b=Blockly.Python.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Python.ORDER_MULTIPLICATIVE)||"0",d=a.getFieldValue("PROPERTY"),c;if("PRIME"==d)return Blockly.Python.definitions_.import_math="import math",Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",[Blockly.Python.provideFunction_("math_isPrime",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods",
"  # If n is not a number but a string, try parsing it.","  if not isinstance(n, Number):","    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:",
"      return False","  return True"])+"("+b+")",Blockly.Python.ORDER_FUNCTION_CALL];switch(d){case "EVEN":c=b+" % 2 == 0";break;case "ODD":c=b+" % 2 == 1";break;case "WHOLE":c=b+" % 1 == 0";break;case "POSITIVE":c=b+" > 0";break;case "NEGATIVE":c=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Python.valueToCode(a,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE);if(!a||"0"==a)return["False",Blockly.Python.ORDER_ATOMIC];c=b+" % "+a+" == 0"}return[c,Blockly.Python.ORDER_RELATIONAL]};
Blockly.Python.math_change=function(a){Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";var b=Blockly.Python.valueToCode(a,"DELTA",Blockly.Python.ORDER_ADDITIVE)||"0";a=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return a+" = ("+a+" if isinstance("+a+", Number) else 0) + "+b+"\n"};Blockly.Python.math_round=Blockly.Python.math_single;Blockly.Python.math_trig=Blockly.Python.math_single;
Blockly.Python.math_on_list=function(a){var b=a.getFieldValue("OP");a=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]";switch(b){case "SUM":b="sum("+a+")";break;case "MIN":b="min("+a+")";break;case "MAX":b="max("+a+")";break;case "AVERAGE":Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Python.provideFunction_("math_mean",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if isinstance(e, Number)]",
"  if not localList: return","  return float(sum(localList)) / len(localList)"]);b=b+"("+a+")";break;case "MEDIAN":Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Python.provideFunction_("math_median",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if isinstance(e, Number)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0",
"  else:","    return localList[(len(localList) - 1) // 2]"]);b=b+"("+a+")";break;case "MODE":b=Blockly.Python.provideFunction_("math_modes",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:",
"        count[1] += 1","        maxCount = max(maxCount, count[1])","        found = True","    if not found:","      counts.append([item, 1])","  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"]);b=b+"("+a+")";break;case "STD_DEV":Blockly.Python.definitions_.import_math="import math";b=Blockly.Python.provideFunction_("math_standard_deviation",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)",
"  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n","  return math.sqrt(variance)"]);b=b+"("+a+")";break;case "RANDOM":Blockly.Python.definitions_.import_random="import random";b="random.choice("+a+")";break;default:throw"Unknown operator: "+b;}return[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_modulo=function(a){var b=Blockly.Python.valueToCode(a,"DIVIDEND",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Python.valueToCode(a,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constrain=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"0",d=Blockly.Python.valueToCode(a,"LOW",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"HIGH",Blockly.Python.ORDER_NONE)||"float('inf')";return["min(max("+b+", "+d+"), "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_random_int=function(a){Blockly.Python.definitions_.import_random="import random";var b=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"0";return["random.randint("+b+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_random_float=function(a){Blockly.Python.definitions_.import_random="import random";return["random.random()",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.colour={};Blockly.Python.colour_picker=function(a){return["'"+a.getFieldValue("COLOUR")+"'",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.colour_random=function(a){Blockly.Python.definitions_.import_random="import random";return["'#%06x' % random.randint(0, 2**24 - 1)",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_rgb=function(a){var b=Blockly.Python.provideFunction_("colour_rgb",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):","  r = round(min(100, max(0, r)) * 2.55)","  g = round(min(100, max(0, g)) * 2.55)","  b = round(min(100, max(0, b)) * 2.55)","  return '#%02x%02x%02x' % (r, g, b)"]),d=Blockly.Python.valueToCode(a,"RED",Blockly.Python.ORDER_NONE)||0,c=Blockly.Python.valueToCode(a,"GREEN",Blockly.Python.ORDER_NONE)||0;a=Blockly.Python.valueToCode(a,"BLUE",Blockly.Python.ORDER_NONE)||
0;return[b+"("+d+", "+c+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_blend=function(a){var b=Blockly.Python.provideFunction_("colour_blend",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)","  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)","  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)","  ratio = min(1, max(0, ratio))","  r = round(r1 * (1 - ratio) + r2 * ratio)","  g = round(g1 * (1 - ratio) + g2 * ratio)","  b = round(b1 * (1 - ratio) + b2 * ratio)",
"  return '#%02x%02x%02x' % (r, g, b)"]),d=Blockly.Python.valueToCode(a,"COLOUR1",Blockly.Python.ORDER_NONE)||"'#000000'",c=Blockly.Python.valueToCode(a,"COLOUR2",Blockly.Python.ORDER_NONE)||"'#000000'";a=Blockly.Python.valueToCode(a,"RATIO",Blockly.Python.ORDER_NONE)||0;return[b+"("+d+", "+c+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.procedures={};
Blockly.Python.procedures_defreturn=function(a){for(var b=Blockly.Variables.allVariables(a),d=b.length-1;0<=d;d--){var c=b[d];-1==a.arguments_.indexOf(c)?b[d]=Blockly.Python.variableDB_.getName(c,Blockly.Variables.NAME_TYPE):b.splice(d,1)}b=b.length?"  global "+b.join(", ")+"\n":"";d=Blockly.Python.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE);c=Blockly.Python.statementToCode(a,"STACK");Blockly.Python.STATEMENT_PREFIX&&(c=Blockly.Python.prefixLines(Blockly.Python.STATEMENT_PREFIX.replace(/%1/g,"'"+
a.id+"'"),Blockly.Python.INDENT)+c);Blockly.Python.INFINITE_LOOP_TRAP&&(c=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+a.id+'"')+c);var e=Blockly.Python.valueToCode(a,"RETURN",Blockly.Python.ORDER_NONE)||"";e?e="  return "+e+"\n":c||(c=Blockly.Python.PASS);for(var g=[],f=0;f<a.arguments_.length;f++)g[f]=Blockly.Python.variableDB_.getName(a.arguments_[f],Blockly.Variables.NAME_TYPE);b="def "+d+"("+g.join(", ")+"):\n"+b+c+e;b=Blockly.Python.scrub_(a,b);Blockly.Python.definitions_[d]=b;return null};
Blockly.Python.procedures_defnoreturn=Blockly.Python.procedures_defreturn;Blockly.Python.procedures_callreturn=function(a){for(var b=Blockly.Python.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),d=[],c=0;c<a.arguments_.length;c++)d[c]=Blockly.Python.valueToCode(a,"ARG"+c,Blockly.Python.ORDER_NONE)||"None";return[b+"("+d.join(", ")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.procedures_callnoreturn=function(a){for(var b=Blockly.Python.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),d=[],c=0;c<a.arguments_.length;c++)d[c]=Blockly.Python.valueToCode(a,"ARG"+c,Blockly.Python.ORDER_NONE)||"None";return b+"("+d.join(", ")+")\n"};
Blockly.Python.procedures_ifreturn=function(a){var b="if "+(Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_NONE)||"False")+":\n";a.hasReturnValue_?(a=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"None",b+="  return "+a+"\n"):b+="  return\n";return b};Blockly.Python.texts={};Blockly.Python.text=function(a){return[Blockly.Python.quote_(a.getFieldValue("TEXT")),Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.text_join=function(a){var b;if(0==a.itemCount_)return["''",Blockly.Python.ORDER_ATOMIC];if(1==a.itemCount_)return b=Blockly.Python.valueToCode(a,"ADD0",Blockly.Python.ORDER_NONE)||"''",["str("+b+")",Blockly.Python.ORDER_FUNCTION_CALL];if(2==a.itemCount_)return b=Blockly.Python.valueToCode(a,"ADD0",Blockly.Python.ORDER_NONE)||"''",a=Blockly.Python.valueToCode(a,"ADD1",Blockly.Python.ORDER_NONE)||"''",["str("+b+") + str("+a+")",Blockly.Python.ORDER_UNARY_SIGN];b=[];for(var d=0;d<a.itemCount_;d++)b[d]=
Blockly.Python.valueToCode(a,"ADD"+d,Blockly.Python.ORDER_NONE)||"''";a=Blockly.Python.variableDB_.getDistinctName("temp_value",Blockly.Variables.NAME_TYPE);b="''.join([str("+a+") for "+a+" in ["+b.join(", ")+"]])";return[b,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.text_append=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''";return b+" = str("+b+") + str("+a+")\n"};
Blockly.Python.text_length=function(a){return["len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.text_isEmpty=function(a){return["not len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.text_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?"find":"rfind",d=Blockly.Python.valueToCode(a,"FIND",Blockly.Python.ORDER_NONE)||"''";return[(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_MEMBER)||"''")+"."+b+"("+d+") + 1",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_charAt=function(a){var b=a.getFieldValue("WHERE")||"FROM_START",d=Blockly.Python.valueToCode(a,"AT",Blockly.Python.ORDER_UNARY_SIGN)||"1";a=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_MEMBER)||"''";switch(b){case "FIRST":return[a+"[0]",Blockly.Python.ORDER_MEMBER];case "LAST":return[a+"[-1]",Blockly.Python.ORDER_MEMBER];case "FROM_START":return d=Blockly.isNumber(d)?parseInt(d,10)-1:"int("+d+" - 1)",[a+"["+d+"]",Blockly.Python.ORDER_MEMBER];case "FROM_END":return[a+
"[-"+d+"]",Blockly.Python.ORDER_MEMBER];case "RANDOM":return Blockly.Python.definitions_.import_random="import random",[Blockly.Python.provideFunction_("text_random_letter",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(text):","  x = int(random.random() * len(text))","  return text[x];"])+"("+a+")",Blockly.Python.ORDER_FUNCTION_CALL]}throw"Unhandled option (text_charAt).";};
Blockly.Python.text_getSubstring=function(a){var b=Blockly.Python.valueToCode(a,"STRING",Blockly.Python.ORDER_MEMBER)||"''",d=a.getFieldValue("WHERE1"),c=a.getFieldValue("WHERE2"),e=Blockly.Python.valueToCode(a,"AT1",Blockly.Python.ORDER_ADDITIVE)||"1";a=Blockly.Python.valueToCode(a,"AT2",Blockly.Python.ORDER_ADDITIVE)||"1";"FIRST"==d||"FROM_START"==d&&"1"==e?e="":"FROM_START"==d?e=Blockly.isNumber(e)?parseInt(e,10)-1:"int("+e+" - 1)":"FROM_END"==d&&(e=Blockly.isNumber(e)?-parseInt(e,10):"-int("+
e+")");"LAST"==c||"FROM_END"==c&&"1"==a?a="":"FROM_START"==d?a=Blockly.isNumber(a)?parseInt(a,10):"int("+a+")":"FROM_END"==d&&(Blockly.isNumber(a)?(a=1-parseInt(a,10),0==a&&(a="")):(Blockly.Python.definitions_.import_sys="import sys",a="int(1 - "+a+") or sys.maxsize"));return[b+"["+e+" : "+a+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_changeCase=function(a){var b={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[a.getFieldValue("CASE")];return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+b,Blockly.Python.ORDER_MEMBER]};Blockly.Python.text_trim=function(a){var b={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[a.getFieldValue("MODE")];return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+b,Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_print=function(a){return"print("+(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''")+")\n"};
Blockly.Python.text_prompt_ext=function(a){var b=Blockly.Python.provideFunction_("text_prompt",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(msg):","  try:","    return raw_input(msg)","  except NameError:","    return input(msg)"]),d=a.getField("TEXT")?Blockly.Python.quote_(a.getFieldValue("TEXT")):Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''",b=b+"("+d+")";"NUMBER"==a.getFieldValue("TYPE")&&(b="float("+b+")");return[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_prompt=Blockly.Python.text_prompt_ext;Blockly.Python.rover={};Blockly.Python.rover_mode=function(a){a=a.getFieldValue("MODE");var b;b="import rospy\nfrom mavros_msgs.srv import SetMode\n";b+="rospy.wait_for_service('/mavros/set_mode')\n";b+="try:\n";b+=" change_mode = rospy.ServiceProxy('/mavros/set_mode', SetMode)\n";b+=" mode='"+a.toString()+"'\n";b+=" resp1 = change_mode(0,mode)\n";b+="except rospy.ServiceException as e:\n";b+=' print ("Service call failed: %s" %e\n )';return b+="\n"};
Blockly.Python.rover_control=function(a){var b=a.getFieldValue("direction"),d=a.getFieldValue("speed");a=Blockly.Python.valueToCode(a,"seconds",Blockly.Python.ORDER_ATOMIC);var c;c="import rospy\nimport time\n";c+="from mavros_msgs.msg import OverrideRCIn\n";c+="from mavros_msgs.srv import SetMode\n";c+="throttle_channel=2\n";c+="steer_channel=0\n";c+="\n";c+="def talker():\n";c+=" pub = rospy.Publisher('mavros/rc/override', OverrideRCIn, queue_size=10)\n";c+=" r = rospy.Rate(10) #10hz\n";c+=" msg = OverrideRCIn()\n";
c+=" start = time.time()\n";c+=" speed='"+d.toString()+"'\n";c+=" exec_time="+a.toString()+"\n";c+=" flag=True #time flag\n";c+=" if speed =='SLOW':\n";c+="  msg.channels[throttle_channel]=1558\n";c+=" elif speed =='NORMAL':\n";c+="  msg.channels[throttle_channel]=1565\n";c+=" elif speed == 'FAST':\n";c+="  msg.channels[throttle_channel]=1570\n";c+=" direction='"+b.toString()+"'\n";c+=" if direction =='STRAIGHT':\n";c+="  msg.channels[steer_channel]=1385\n";c+=" elif direction =='RIGHT':\n";c+="  msg.channels[steer_channel]=1450\n";
c+=" elif direction == 'LEFT':\n";c+="  msg.channels[steer_channel]=1300\n";c+=" while not rospy.is_shutdown() and flag:\n";c+="  sample_time=time.time()\n";c+="  if ((sample_time - start) > exec_time):\n";c+="   flag=False\n";c+="  rospy.loginfo(msg)\n";c+="  pub.publish(msg)\n";c+="  r.sleep()\n";c+="\n";c+="if __name__ == '__main__':\n";c+=" rospy.wait_for_service('/mavros/set_mode')\n";c+=" change_mode = rospy.ServiceProxy('/mavros/set_mode', SetMode)\n";c+=" resp1 = change_mode(custom_mode='manual')\n";
c+=" print (resp1)\n";c+=" if 'True' in str(resp1):\n";c+="  try:\n";c+="   talker()\n";c+="  except rospy.ROSInterruptException: pass\n";return c+="\n"};Blockly.Python.rover_avoid_obstacles=function(a){return a="\n"+Blockly.readPythonFile("../blockly/generators/python/scripts/rover/avoid_obstacles.py")};Blockly.Python.spider={};
Blockly.Python.spider_standup_down=function(a){a="import sys\nimport time\n";a+="from crab_msgs.msg import apm_imu\n";a+="from crab_msgs.msg import BodyCommand\n";a+="from crab_msgs.msg import BodyState\n";a+="from crab_msgs.msg import GaitCommand\n";a+="from crab_msgs.msg import LegIKRequest\n";a+="from crab_msgs.msg import LegJointsState\n";a+="from crab_msgs.msg import LegPositionState\n";a+="from crab_msgs.msg import LegsJointsState\n";a+="from sensor_msgs.msg import Joy\n";a+="\n";a+="standup_time=20\n";
a+="\n";a+="################\n";a+="## INITIALIZE ##\n";a+="################ \n";a+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";a+="msg = Joy()\n";a+="msg.header.stamp = rospy.Time.now()\n";a+="rate = rospy.Rate(10)\n";a+="\n";a+="valueAxe = 0.0\n";a+="valueButton = 0\n";a+="for i in range (0, 20):\n";a+=" msg.axes.append(valueAxe)\n";a+="for e in range (0, 17):\n";a+=" msg.buttons.append(valueButton)\n";a+="\n";a+="\n";a+="####################\n";a+="## STAND UP    ##\n";a+="####################\n";
a+="msg.buttons[3] = 1\n";a+="i=0\n";a+="bo=True\n";a+="standup_time=standup_time/3\n";a+="while not rospy.is_shutdown() and bo:\n";a+=" i=i+1\n";a+=" if (i>standup_time):\n";a+="   bo=False\n";a+="   msg.buttons[3] = 0\n";a+=" pub.publish(msg)\n";a+=" rate.sleep()\n";return a+="time.sleep(2)\n"};
Blockly.Python.spider_walk=function(a){var b=a.getFieldValue("WALK_SECS"),d=a.getFieldValue("direction");Blockly.Python.valueToCode(a,"direction",Blockly.Python.ORDER_ATOMIC);a=""+('dropdown_direction = "'+d.toString()+'"\n');a+='seconds = "'+b.toString()+'"\n';return a+=Blockly.readPythonFile("../blockly/generators/python/scripts/spider/walk.py")};
Blockly.Python.spider_turn=function(a){var b=a.getFieldValue("TURN_SECS"),d=a.getFieldValue("direction");Blockly.Python.valueToCode(a,"direction",Blockly.Python.ORDER_ATOMIC);a=""+('dropdown_direction = "'+d.toString()+'"\n');a+='seconds = "'+b.toString()+'"\n';return a+=Blockly.readPythonFile("../blockly/generators/python/scripts/spider/turn.py")};
Blockly.Python.spider_turn_degrees=function(a){var b=a.getFieldValue("TURN_DEGREES"),d=a.getFieldValue("direction");Blockly.Python.valueToCode(a,"direction",Blockly.Python.ORDER_ATOMIC);a=""+('dropdown_direction = "'+d.toString()+'"\n');a+='degrees = "'+b.toString()+'"\n';return a+=Blockly.readPythonFile("../blockly/generators/python/scripts/spider/turn_degrees.py")};Blockly.Python.spider_avoid_obstacles=function(a){return a="\n"+Blockly.readPythonFile("../blockly/generators/python/scripts/spider/avoid_obstacles.py")};Blockly.Python.variables={};Blockly.Python.variables_get=function(a){return[Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.variables_set=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"0";return Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+b+"\n"};Blockly.Python.logic={};
Blockly.Python.controls_if=function(a){for(var b=0,d=Blockly.Python.valueToCode(a,"IF"+b,Blockly.Python.ORDER_NONE)||"False",c=Blockly.Python.statementToCode(a,"DO"+b)||Blockly.Python.PASS,e="if "+d+":\n"+c,b=1;b<=a.elseifCount_;b++)d=Blockly.Python.valueToCode(a,"IF"+b,Blockly.Python.ORDER_NONE)||"False",c=Blockly.Python.statementToCode(a,"DO"+b)||Blockly.Python.PASS,e+="elif "+d+":\n"+c;a.elseCount_&&(c=Blockly.Python.statementToCode(a,"ELSE")||Blockly.Python.PASS,e+="else:\n"+c);return e};
Blockly.Python.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],d=Blockly.Python.ORDER_RELATIONAL,c=Blockly.Python.valueToCode(a,"A",d)||"0";a=Blockly.Python.valueToCode(a,"B",d)||"0";return[c+" "+b+" "+a,d]};
Blockly.Python.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"and":"or",d="and"==b?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,c=Blockly.Python.valueToCode(a,"A",d);a=Blockly.Python.valueToCode(a,"B",d);if(c||a){var e="and"==b?"True":"False";c||(c=e);a||(a=e)}else a=c="False";return[c+" "+b+" "+a,d]};Blockly.Python.logic_negate=function(a){return["not "+(Blockly.Python.valueToCode(a,"BOOL",Blockly.Python.ORDER_LOGICAL_NOT)||"True"),Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.logic_null=function(a){return["None",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.logic_ternary=function(a){var b=Blockly.Python.valueToCode(a,"IF",Blockly.Python.ORDER_CONDITIONAL)||"False",d=Blockly.Python.valueToCode(a,"THEN",Blockly.Python.ORDER_CONDITIONAL)||"None";a=Blockly.Python.valueToCode(a,"ELSE",Blockly.Python.ORDER_CONDITIONAL)||"None";return[d+" if "+b+" else "+a,Blockly.Python.ORDER_CONDITIONAL]};Blockly.Python.brain={};
Blockly.Python.get_laser=function(a){a=Blockly.Python.valueToCode(a,"laser",Blockly.Python.ORDER_ATOMIC);var b;b="import rospy\nimport subprocess\n";b+="import rosnode\n";b+="import rospkg\n";b+="from sensor_msgs.msg import Range\n";b+="ros_nodes = rosnode.get_node_names()\n";b+="if not '/lrm30_node' in ros_nodes:\n";b+="  rospack = rospkg.RosPack()\n";b+="  command = rospack.get_path('lrm30_ros').replace('share', 'lib') + '/lrm30'\n";b+="  process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";b+=
"msg_laser = rospy.wait_for_message('/lrm30_data', Range, timeout=1)\n";return b+a+" = msg_laser.range\n"};Blockly.Python.take_a_picture=function(a){window.open("/pages/images/imageViewer.html","_blank");return a=""+Blockly.readPythonFile("../blockly/generators/python/scripts/brain/take_a_picture.py")};
Blockly.Python.turn_on_blue_led=function(a){a=a.getFieldValue("BLUE_LED");var b;b="#!/usr/bin/python\nimport rospy\n";b+="import time\n";b+="import rosnode\n";b+="import subprocess\n";b+="from std_msgs.msg import String\n";b+="\n";b+="def talker():\n";b+="  pub = rospy.Publisher('/statusleds', String, queue_size=10)\n";b+="  rate = rospy.Rate(10)\n";b+="  start = time.time()\n";b+="  flag=True #time flag\n";b+="  led='"+a.toString()+"'\n";b+="  if (led == 'TRUE'):\n";b+="    msg = 'blue'\n";b+="  else:\n";
b+="    msg = 'blue_off'\n";b+="  while not rospy.is_shutdown() and flag:\n";b+="    sample_time=time.time()\n";b+="    if ((sample_time - start) > 1):\n";b+="      flag=False\n";b+="    pub.publish(msg)\n";b+="    rate.sleep()\n";b+="if __name__ == '__main__':\n";b+="  ros_nodes = rosnode.get_node_names()\n";b+="  if not '/erle_statusleds' in ros_nodes:\n";b+="    command='python /home/erle/spider_ws/src/ros_erle_statusled/scripts/statusleds.py'\n";b+="    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";
return b+="  talker()\n"};
Blockly.Python.turn_on_orange_led=function(a){a=a.getFieldValue("ORANGE_LED");var b;b="#!/usr/bin/python\nimport rospy\n";b+="import time\n";b+="from std_msgs.msg import String\n";b+="\n";b+="def talker():\n";b+="  pub = rospy.Publisher('/statusleds', String, queue_size=10)\n";b+="  rate = rospy.Rate(10)\n";b+="  start = time.time()\n";b+="  flag=True #time flag\n";b+="  led='"+a.toString()+"'\n";b+="  if (led == 'TRUE'):\n";b+="    msg = 'orange'\n";b+="  else:\n";b+="    msg = 'orange_off'\n";b+=
"  while not rospy.is_shutdown() and flag:\n";b+="    sample_time=time.time()\n";b+="    if ((sample_time - start) > 1):\n";b+="      flag=False\n";b+="    pub.publish(msg)\n";b+="    rate.sleep()\n";b+="if __name__ == '__main__':\n";return b+="  talker()\n"};
Blockly.Python.calibrate_imu=function(a){a="import rosnode\nimport subprocess\n";a+="import time\n";a+="\n";a+="ros_nodes = rosnode.get_node_names()\n";a+="if not '/imu_talker' in ros_nodes:\n";a+="    command='/home/erle/spider_ws/install_isolated/share/ros_erle_imu/imu_talker'\n";a+="    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";return a+="    time.sleep(10)\n"};
Blockly.Python.camera_color_location=function(a){var b=a.getFieldValue("COLOR");a=Blockly.Python.valueToCode(a,"LOCATION",Blockly.Python.ORDER_ATOMIC);b=b.replace(/[^0-9A-F]/gi,"");b=parseInt(b,16);b=[b&255,b>>8&255,b>>16&255].join();b=""+('colorBGR = "'+b.toString()+'"\n');b+=Blockly.readPythonFile("../blockly/generators/python/scripts/brain/color_location.py");return b+a+" = color_location\n"};
Blockly.Python.start_hokuyo_laser=function(a){a="import rosnode\nimport subprocess\n";a+="import time\n";a+="import os\n";a+="\n";a+="ros_nodes = rosnode.get_node_names()\n";a+="if not '/urg_node' in ros_nodes:\n";a+="    os.system('ifconfig eth0 192.168.0.2')\n";a+="    ip_add = '192.168.0.10'\n";a+="    command='rosrun urg_node urg_node _ip_address:=' + ip_add\n";a+="    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";return a+="    time.sleep(10)\n"};
Blockly.Python.start_sick_laser=function(a){a="import rosnode\nimport subprocess\n";a+="import time\n";a+="import os\n";a+="\n";a+="ros_nodes = rosnode.get_node_names()\n";a+="if not '/robot_state_publisher' in ros_nodes:\n";a+="    os.system('ifconfig eth0 192.168.0.2')\n";a+="    command='roslaunch sick_tim sick_tim571_2050101.launch'\n";a+="    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";return a+="    time.sleep(10)\n"};Blockly.Python.lists={};Blockly.Python.lists_create_empty=function(a){return["[]",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.lists_create_with=function(a){for(var b=Array(a.itemCount_),d=0;d<a.itemCount_;d++)b[d]=Blockly.Python.valueToCode(a,"ADD"+d,Blockly.Python.ORDER_NONE)||"None";b="["+b.join(", ")+"]";return[b,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lists_repeat=function(a){var b=Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"None";a=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return["["+b+"] * "+a,Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.lists_length=function(a){return["len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_isEmpty=function(a){return["not len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.lists_indexOf=function(a){var b=Blockly.Python.valueToCode(a,"FIND",Blockly.Python.ORDER_NONE)||"[]",d=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_MEMBER)||"''";return[("FIRST"==a.getFieldValue("END")?Blockly.Python.provideFunction_("first_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList, elem):","  try: theIndex = myList.index(elem) + 1","  except: theIndex = 0","  return theIndex"]):Blockly.Python.provideFunction_("last_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+
"(myList, elem):","  try: theIndex = len(myList) - myList[::-1].index(elem)","  except: theIndex = 0","  return theIndex"]))+"("+d+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_getIndex=function(a){var b=a.getFieldValue("MODE")||"GET",d=a.getFieldValue("WHERE")||"FROM_START",c=Blockly.Python.valueToCode(a,"AT",Blockly.Python.ORDER_UNARY_SIGN)||"1";a=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_MEMBER)||"[]";if("FIRST"==d){if("GET"==b)return[a+"[0]",Blockly.Python.ORDER_MEMBER];d=a+".pop(0)";if("GET_REMOVE"==b)return[d,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+"\n"}else if("LAST"==d){if("GET"==b)return[a+"[-1]",Blockly.Python.ORDER_MEMBER];
d=a+".pop()";if("GET_REMOVE"==b)return[d,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+"\n"}else if("FROM_START"==d){c=Blockly.isNumber(c)?parseInt(c,10)-1:"int("+c+" - 1)";if("GET"==b)return[a+"["+c+"]",Blockly.Python.ORDER_MEMBER];d=a+".pop("+c+")";if("GET_REMOVE"==b)return[d,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+"\n"}else if("FROM_END"==d){if("GET"==b)return[a+"[-"+c+"]",Blockly.Python.ORDER_MEMBER];d=a+".pop(-"+c+")";if("GET_REMOVE"==b)return[d,Blockly.Python.ORDER_FUNCTION_CALL];
if("REMOVE"==b)return d+"\n"}else if("RANDOM"==d){Blockly.Python.definitions_.import_random="import random";if("GET"==b)return["random.choice("+a+")",Blockly.Python.ORDER_FUNCTION_CALL];d=Blockly.Python.provideFunction_("lists_remove_random_item",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  x = int(random.random() * len(myList))","  return myList.pop(x)"])+"("+a+")";if("GET_REMOVE"==b)return[d,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+"\n"}throw"Unhandled combination (lists_getIndex).";
};
Blockly.Python.lists_setIndex=function(a){var b=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",d=a.getFieldValue("MODE")||"GET",c=a.getFieldValue("WHERE")||"FROM_START",e=Blockly.Python.valueToCode(a,"AT",Blockly.Python.ORDER_NONE)||"1";a=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"None";if("FIRST"==c){if("SET"==d)return b+"[0] = "+a+"\n";if("INSERT"==d)return b+".insert(0, "+a+")\n"}else if("LAST"==c){if("SET"==d)return b+"[-1] = "+a+"\n";if("INSERT"==d)return b+
".append("+a+")\n"}else if("FROM_START"==c){e=Blockly.isNumber(e)?parseInt(e,10)-1:"int("+e+" - 1)";if("SET"==d)return b+"["+e+"] = "+a+"\n";if("INSERT"==d)return b+".insert("+e+", "+a+")\n"}else if("FROM_END"==c){if("SET"==d)return b+"[-"+e+"] = "+a+"\n";if("INSERT"==d)return b+".insert(-"+e+", "+a+")\n"}else if("RANDOM"==c){Blockly.Python.definitions_.import_random="import random";b.match(/^\w+$/)?c="":(c=Blockly.Python.variableDB_.getDistinctName("tmp_list",Blockly.Variables.NAME_TYPE),e=c+" = "+
b+"\n",b=c,c=e);e=Blockly.Python.variableDB_.getDistinctName("tmp_x",Blockly.Variables.NAME_TYPE);c+=e+" = int(random.random() * len("+b+"))\n";if("SET"==d)return c+(b+"["+e+"] = "+a+"\n");if("INSERT"==d)return c+=b+".insert("+e+", "+a+")\n"}throw"Unhandled combination (lists_setIndex).";};
Blockly.Python.lists_getSublist=function(a){var b=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",d=a.getFieldValue("WHERE1"),c=a.getFieldValue("WHERE2"),e=Blockly.Python.valueToCode(a,"AT1",Blockly.Python.ORDER_ADDITIVE)||"1";a=Blockly.Python.valueToCode(a,"AT2",Blockly.Python.ORDER_ADDITIVE)||"1";"FIRST"==d||"FROM_START"==d&&"1"==e?e="":"FROM_START"==d?e=Blockly.isNumber(e)?parseInt(e,10)-1:"int("+e+" - 1)":"FROM_END"==d&&(e=Blockly.isNumber(e)?-parseInt(e,10):"-int("+e+")");
"LAST"==c||"FROM_END"==c&&"1"==a?a="":"FROM_START"==d?a=Blockly.isNumber(a)?parseInt(a,10):"int("+a+")":"FROM_END"==d&&(Blockly.isNumber(a)?(a=1-parseInt(a,10),0==a&&(a="")):(Blockly.Python.definitions_.import_sys="import sys",a="int(1 - "+a+") or sys.maxsize"));return[b+"["+e+" : "+a+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.lists_split=function(a){var b=a.getFieldValue("MODE");if("SPLIT"==b)b=Blockly.Python.valueToCode(a,"INPUT",Blockly.Python.ORDER_MEMBER)||"''",a=Blockly.Python.valueToCode(a,"DELIM",Blockly.Python.ORDER_NONE),a=b+".split("+a+")";else if("JOIN"==b)b=Blockly.Python.valueToCode(a,"INPUT",Blockly.Python.ORDER_NONE)||"[]",a=Blockly.Python.valueToCode(a,"DELIM",Blockly.Python.ORDER_MEMBER)||"''",a=a+".join("+b+")";else throw"Unknown mode: "+b;return[a,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.loops={};Blockly.Python.controls_repeat_ext=function(a){var b=a.getField("TIMES")?String(parseInt(a.getFieldValue("TIMES"),10)):Blockly.Python.valueToCode(a,"TIMES",Blockly.Python.ORDER_NONE)||"0",b=Blockly.isNumber(b)?parseInt(b,10):"int("+b+")",d=Blockly.Python.statementToCode(a,"DO"),d=Blockly.Python.addLoopTrap(d,a.id)||Blockly.Python.PASS;return"for "+Blockly.Python.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE)+" in range("+b+"):\n"+d};
Blockly.Python.controls_repeat=Blockly.Python.controls_repeat_ext;Blockly.Python.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),d=Blockly.Python.valueToCode(a,"BOOL",b?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_NONE)||"False",c=Blockly.Python.statementToCode(a,"DO"),c=Blockly.Python.addLoopTrap(c,a.id)||Blockly.Python.PASS;b&&(d="not "+d);return"while "+d+":\n"+c};
Blockly.Python.controls_for=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),d=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"0",e=Blockly.Python.valueToCode(a,"BY",Blockly.Python.ORDER_NONE)||"1",g=Blockly.Python.statementToCode(a,"DO"),g=Blockly.Python.addLoopTrap(g,a.id)||Blockly.Python.PASS,f="",h=function(){return Blockly.Python.provideFunction_("upRange",
["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start <= stop:","    yield start","    start += abs(step)"])},k=function(){return Blockly.Python.provideFunction_("downRange",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start >= stop:","    yield start","    start -= abs(step)"])};a=function(a,b,c){return"("+a+" <= "+b+") and "+h()+"("+a+", "+b+", "+c+") or "+k()+"("+a+", "+b+", "+c+")"};if(Blockly.isNumber(d)&&Blockly.isNumber(c)&&
Blockly.isNumber(e))d=parseFloat(d),c=parseFloat(c),e=Math.abs(parseFloat(e)),0===d%1&&0===c%1&&0===e%1?(d<=c?(c++,a=0==d&&1==e?c:d+", "+c,1!=e&&(a+=", "+e)):(c--,a=d+", "+c+", -"+e),a="range("+a+")"):(a=d<c?h():k(),a+="("+d+", "+c+", "+e+")");else{var l=function(a,c){if(Blockly.isNumber(a))a=parseFloat(a);else if(a.match(/^\w+$/))a="float("+a+")";else{var d=Blockly.Python.variableDB_.getDistinctName(b+c,Blockly.Variables.NAME_TYPE);f+=d+" = float("+a+")\n";a=d}return a},d=l(d,"_start"),c=l(c,"_end");
l(e,"_inc");a="number"==typeof d&&"number"==typeof c?d<c?h(d,c,e):k(d,c,e):a(d,c,e)}return f+="for "+b+" in "+a+":\n"+g};Blockly.Python.controls_forEach=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),d=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_RELATIONAL)||"[]",c=Blockly.Python.statementToCode(a,"DO"),c=Blockly.Python.addLoopTrap(c,a.id)||Blockly.Python.PASS;return"for "+b+" in "+d+":\n"+c};
Blockly.Python.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break\n";case "CONTINUE":return"continue\n"}throw"Unknown flow statement.";};Blockly.Python.for_time=function(a){var b=a.getFieldValue("SECONDS_WHILE"),d=Blockly.Python.statementToCode(a,"DO"),d=Blockly.Python.addLoopTrap(d,a.id)||Blockly.Python.PASS;a="import time\n"+("t_end = time.time()+"+b+"\n");return a+="while time.time() < t_end:\n"+d+"\n"};Blockly.Python.code={};Blockly.Python.run_code=function(a){a=a.getFieldValue("CODE_TEXT");return a=""+(""+a+"\n")+"\n"};